/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import interact.GUIInteraction;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * GIAO DIỆN TÌM KIẾM SẢN PHẨM
 *
 * @author NHÓM 2
 */
public class frmSearchProducts extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmSearchProducts
     */
    public frmSearchProducts() {
        initComponents();
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtProductID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        cboCategory = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        txtPriceTo = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(51, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search Products");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel2.setText("Products ID :");

        txtProductID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtProductIDMouseClicked(evt);
            }
        });
        txtProductID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductIDKeyReleased(evt);
            }
        });

        jLabel4.setText("Price :");

        cboCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        cboCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboCategoryItemStateChanged(evt);
            }
        });

        jLabel5.setText("Category :");

        txtProductName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtProductNameMouseClicked(evt);
            }
        });
        txtProductName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductNameKeyReleased(evt);
            }
        });

        jLabel3.setText("Product Name :");

        btnRefresh.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconRefresh.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconBrower.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Table Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jScrollPane1.setViewportView(tableProduct);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        txtPriceTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceToKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(btnSearch)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtProductName)
                            .addComponent(txtProductID, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel5)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPriceTo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPriceTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(cboCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // REFRESH TEXTFIELD VÀ TABLE
        txtProductID.setText("");
        txtProductName.setText("");
        txtPrice.setText("");
        cboCategory.setSelectedIndex(0);
        try {
            interact.GUIInteraction.readToTable("select * from View_ProductSales", tableProduct);
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchProducts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // TÌM KIẾM SẢN PHẨM
            String id = txtProductID.getText().trim();
            String name = txtProductName.getText().trim();
            String price = txtPrice.getText().trim();
            String priceTo = txtPriceTo.getText().trim();
            String category;
            if(cboCategory.getSelectedIndex()==0){
                category="";
            }else{
                category = cboCategory.getSelectedItem().toString();
            }
            String sql = "select * from View_ProductSales where ProductID like N'%" + id + "%' AND "
                                                    + "ProductName like N'%" + name + "%' AND "
                                                    + "Price >= '" + price + "' AND "
                                                    + "Price <= '" + priceTo + "' AND "
                                                    + "CategoryName like N'%" + category + "%'";
            GUIInteraction.readToTable(sql, tableProduct);
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchProducts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtProductIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProductIDMouseClicked
        // NẾU SEARCH BẰNG ID THÌ Ô NAME SẼ RESET TRỐNG
        txtProductName.setText("");
    }//GEN-LAST:event_txtProductIDMouseClicked

    private void txtProductNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtProductNameMouseClicked
        // NẾU SEARCH BẰNG NAME THÌ Ô ID SẼ RESET TRỐNG
        txtProductID.setText("");
    }//GEN-LAST:event_txtProductNameMouseClicked

    private void txtProductNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductNameKeyReleased
        // TODO add your handling code here:
        try {
            // TÌM KIẾM SẢN PHẨM
            String id = txtProductID.getText().trim();
            String name = txtProductName.getText().trim();
            String price = txtPrice.getText().trim();
            String priceTo = txtPriceTo.getText().trim();
            String category;
            if(cboCategory.getSelectedIndex()==0){
                category="";
            }else{
                category = cboCategory.getSelectedItem().toString();
            }
            if(price.length()==0){
                price = "0";
            }
            if(priceTo.length()==0){
                priceTo = "1000000000";
            }
            String sql = "select * from View_ProductSales where ProductID like N'%" + id + "%' AND "
                                                    + "ProductName like N'%" + name + "%' AND "
                                                    + "Price >= '" + price + "' AND "
                                                    + "Price <= '" + priceTo + "' AND "
                                                    + "CategoryName like N'%" + category + "%'";
            GUIInteraction.readToTable(sql, tableProduct);
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchProducts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtProductNameKeyReleased

    private void txtProductIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductIDKeyReleased
        // TODO add your handling code here:
        try {
            // TÌM KIẾM SẢN PHẨM
            String id = txtProductID.getText().trim();
            String name = txtProductName.getText().trim();
            String price = txtPrice.getText().trim();
            String priceTo = txtPriceTo.getText().trim();
            String category;
            if(cboCategory.getSelectedIndex()==0){
                category="";
            }else{
                category = cboCategory.getSelectedItem().toString();
            }
            if(price.length()==0){
                price = "0";
            }
            if(priceTo.length()==0){
                priceTo = "1000000000";
            }
            String sql = "select * from View_ProductSales where ProductID like N'%" + id + "%' AND "
                                                    + "ProductName like N'%" + name + "%' AND "
                                                    + "Price >= '" + price + "' AND "
                                                    + "Price <= '" + priceTo + "' AND "
                                                    + "CategoryName like N'%" + category + "%'";
            GUIInteraction.readToTable(sql, tableProduct);
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchProducts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtProductIDKeyReleased

    private void txtPriceToKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceToKeyReleased
        // TODO add your handling code here:
        try {
            // TÌM KIẾM SẢN PHẨM
            String id = txtProductID.getText().trim();
            String name = txtProductName.getText().trim();
            String price = txtPrice.getText().trim();
            String priceTo = txtPriceTo.getText().trim();
            String category;
            if(cboCategory.getSelectedIndex()==0){
                category="";
            }else{
                category = cboCategory.getSelectedItem().toString();
            }
            String sql = "select * from View_ProductSales where ProductID like N'%" + id + "%' AND "
                                                    + "ProductName like N'%" + name + "%' AND "
                                                    + "Price >= '" + price + "' AND "
                                                    + "Price <= '" + priceTo + "' AND "
                                                    + "CategoryName like N'%" + category + "%'";
            GUIInteraction.readToTable(sql, tableProduct);
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchProducts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtPriceToKeyReleased

    private void cboCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboCategoryItemStateChanged
        // TODO add your handling code here:
        try {
            // TÌM KIẾM SẢN PHẨM
            String id = txtProductID.getText().trim();
            String name = txtProductName.getText().trim();
            String price = txtPrice.getText().trim();
            String priceTo = txtPriceTo.getText().trim();
            String category;
            if(cboCategory.getSelectedIndex()==0){
                category="";
            }else{
                category = cboCategory.getSelectedItem().toString();
            }
            if(price.length()==0){
                price = "0";
            }
            if(priceTo.length()==0){
                priceTo = "1000000000";
            }
            String sql = "select * from View_ProductSales where ProductID like N'%" + id + "%' AND "
                                                    + "ProductName like N'%" + name + "%' AND "
                                                    + "Price >= '" + price + "' AND "
                                                    + "Price <= '" + priceTo + "' AND "
                                                    + "CategoryName like N'%" + category + "%'";
            GUIInteraction.readToTable(sql, tableProduct);
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchProducts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboCategoryItemStateChanged

    private void refresh() {
        // LOAD DỮ LIỆU TỪ SQL RA BẢNG
        try {
            interact.GUIInteraction.readToTable("select * from View_ProductSales", tableProduct);
            interact.GUIInteraction.readToCombo("select * from Categories", cboCategory,"CategoryName");
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchProducts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cboCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProduct;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtPriceTo;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductName;
    // End of variables declaration//GEN-END:variables
}
